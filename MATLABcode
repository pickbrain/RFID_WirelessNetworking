clc
clear all
%Initialisation%
fileSIG=fopen('signal.txt','r');
sig1=fscanf(fileSIG,'%f');
size_signal=size(sig1);
%time scale
time_vector=1:1:size_signal;
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
thresh_t = 60; %Threshold between high and low.
thresh_end =  100; % End of message, time is too long to be high signal.
thresh_a = 0.5; %Amplitude threshold.
tx = zeros(size_signal); %Digitalized transmitter signal.

%Acquiring transmitter signals
tx_msg = [];
t_flag = 0;
for i = 1:1:size_signal
    if sig1(i)-thresh_a > 0 %Check if signal > threshold
        tx(i) = 1;
        
        %Rise
        if t_flag == 0
            t_flag = 1;
            t1 = i;
        end
    else
        
        if t_flag == 1
        
           %Fall
            t_flag=0;
            t_ON = i-t1;
            if t_ON >thresh_t %Check time in which signal was high for recognition of 0's and 1's
                if t_ON >thresh_end %Check time exceeds time for high signal. 
                    tx_msg = [tx_msg 0000];
                else
                    tx_msg = [tx_msg 1];
                end
            else
                tx_msg = [tx_msg 0];
            end
        end
    end
end
plot(time_vector, sig1,'r')
figure()
plot(time_vector, tx, 'b')


tx_msg
